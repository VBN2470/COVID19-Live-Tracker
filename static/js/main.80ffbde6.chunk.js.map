{"version":3,"sources":["components/Cards.jsx","components/Chart.jsx","components/Country.jsx","App.js","index.js"],"names":["cardStyle","color","margin","width","Cards","country","data","getData","useEffect","confirmed","deaths","lastUpdate","recovered","id","className","style","flexDirection","Card","bg","Header","Body","Title","start","end","value","duration","separator","Text","Date","toDateString","chartStyle","marginTop","marginBottom","Chart","dailyData","getDailyData","myGlobalChart","length","labels","map","reportDate","datasets","total","label","backgroundColor","borderColor","borderWidth","fill","options","title","display","text","myCountryChart","legend","Country","countryList","getCountryList","handleChange","Form","Group","Control","as","onChange","e","target","idx","key","App","useState","setData","setDailyData","setCountryList","setCountry","url","a","axios","get","currentData","countries","name","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80ffbde6.chunk.js","sourcesContent":["\r\nimport React, { useEffect } from 'react';\r\nimport '../App.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CountUp from 'react-countup';\r\n\r\nconst Cards = ({ country, data, getData }) => {\r\n\r\n    useEffect(() => {\r\n        getData(country);\r\n    }, []);\r\n\r\n    const { confirmed, deaths, lastUpdate, recovered } = data;\r\n\r\n    return (\r\n        <div id=\"cards\" className=\"container\" style={{flexDirection: 'row'}}>\r\n            <>\r\n                <Card bg=\"primary\" style={cardStyle}>\r\n                    <Card.Header>Confirmed Cases</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            <h2>\r\n                                {\r\n                                    !confirmed ? 'Loading...' :\r\n                                        <CountUp\r\n                                            start={0}\r\n                                            end={confirmed.value}\r\n                                            duration={1}\r\n                                            separator=\",\"\r\n                                        />\r\n                                }\r\n                            </h2>\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card bg=\"success\" style={cardStyle}>\r\n                    <Card.Header>Recovered Cases</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            <h2>\r\n                                {\r\n                                    !confirmed ? 'Loading...' :\r\n                                        <CountUp\r\n                                            start={0}\r\n                                            end={recovered.value}\r\n                                            duration={1}\r\n                                            separator=\",\"\r\n                                        />\r\n                                }\r\n                            </h2>\r\n                            \r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card bg=\"danger\" style={cardStyle}>\r\n                    <Card.Header>Deaths</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            <h2>\r\n                                {\r\n                                    !confirmed ? 'Loading...' :\r\n                                        <CountUp\r\n                                            start={0}\r\n                                            end={deaths.value}\r\n                                            duration={1}\r\n                                            separator=\",\"\r\n                                        />\r\n                                }\r\n                            </h2>\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst cardStyle = {\r\n    color: 'white',\r\n    margin: '8px',\r\n    width: '20rem'\r\n}\r\n\r\nexport default Cards;\r\n","\r\nimport React, { useEffect } from 'react';\r\nimport '../App.css';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\n\r\nexport const Chart = ({ country, data, dailyData, getDailyData }) => {\r\n\r\n    useEffect(() => {\r\n        getDailyData();\r\n    }, []);\r\n\r\n    const { confirmed, recovered, deaths, lastUpdate } = data;\r\n\r\n    const myGlobalChart = (\r\n        dailyData.length\r\n        ? <Line \r\n            data={{\r\n                labels: dailyData.map(data => data.reportDate),\r\n                datasets: [\r\n                    {\r\n                        data: dailyData.map(data => data.confirmed.total),\r\n                        label: 'Infected',\r\n                        backgroundColor: 'rgb(0, 0, 255, 0.2)',\r\n                        borderColor: 'blue',\r\n                        borderWidth: '10px',\r\n                        fill: true\r\n                    }, \r\n                    \r\n                    {\r\n                        data: dailyData.map(data => data.deaths.total),\r\n                        label: 'Deaths',\r\n                        backgroundColor: 'rgb(255, 0, 0, 0.2)',\r\n                        borderColor: 'red',\r\n                        borderWidth: '10px',\r\n                        fill: true\r\n                    }\r\n                ]\r\n            }}\r\n            options={{\r\n                title: {display: true, text: `Confirmed Global Cases | ${new Date(lastUpdate).toDateString()}`}\r\n            }}\r\n        /> \r\n        : null\r\n    );\r\n\r\n    const myCountryChart = (\r\n        data.confirmed\r\n        ? <Bar \r\n            data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'], \r\n                datasets: [\r\n                    {\r\n                        backgroundColor: [\r\n                            'rgb(2, 116, 216)',\r\n                            'rgb(92, 184, 92)',\r\n                            'rgb(216, 84, 80)'\r\n                        ],\r\n                        data: [confirmed.value, recovered.value, deaths.value]\r\n                    }\r\n                ],\r\n            }}\r\n            options={{\r\n                legend: { display: false },\r\n            }}  \r\n        />\r\n        : null\r\n    )\r\n\r\n    return (\r\n        <div className=\"container\" style={chartStyle}>\r\n            {country ? myCountryChart : myGlobalChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst chartStyle = { \r\n    marginTop: '10px', \r\n    marginBottom: '2rem',\r\n}\r\n \r\nexport default Chart;\r\n","\r\nimport React, { useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\nimport '../App.css';\r\n\r\nconst Country = ({ countryList, getCountryList, handleChange }) => {\r\n\r\n    useEffect(() => {\r\n        getCountryList();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Form.Group>\r\n                <Form.Control as=\"select\" onChange={e => handleChange(e.target.value)}>\r\n                    <option>Select Country</option>\r\n                    {countryList.length && countryList.map((country, idx) => \r\n                        <option key={idx} value={country}>{country}</option>\r\n                    )}\r\n                </Form.Control>\r\n            </Form.Group>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country;\r\n","\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nimport { Cards, Chart, Country } from './components/index';\n\nfunction App() {\n\n    const [data, setData] = useState({});\n    const [dailyData, setDailyData] = useState({});\n    const [countryList, setCountryList] = useState({});\n    const [country, setCountry] = useState('');\n\n    let url = 'https://covid19.mathdro.id/api';\n\n    const getData = async country => {\n        if (country) url = `${url}/countries/${country}`;\n        const currentData = await axios.get(url);\n        setData(currentData.data);\n    }\n\n    const getDailyData = async () => {\n        const dailyData = await axios.get(`${url}/daily`);\n        setDailyData(dailyData.data);\n    }\n    \n    const getCountryList = async () => {\n        const countryList = await axios.get(`${url}/countries`);\n        setCountryList(countryList.data.countries.map(country => country.name));\n    }\n    \n    const handleChange = async country => {\n        setCountry(country);\n        getData(country);\n    }\n\n    return (\n        <div className=\"App\" style={{position: 'relative'}}>\n            <h1 id=\"title\" style={{marginTop: '1rem'}}>COVID-19 Live Tracker</h1>\n            <div className=\"container\">\n                <Cards\n                    country={country}\n                    data={data}\n                    getData={getData}/>\n                <Country\n                    countryList={countryList}\n                    getCountryList={getCountryList}\n                    handleChange={handleChange} />\n                <Chart\n                    country={country}\n                    dailyData={dailyData}\n                    data={data}\n                    getDailyData={getDailyData}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}